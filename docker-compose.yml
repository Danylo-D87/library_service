services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build: .
    command: sh -c "python manage.py wait_for_db && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
  celery:
    build: .
    command: celery -A config worker --loglevel=info
    user: "1000:1000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0


volumes:
  postgres_data:
  media_volume:
  static_volume:
